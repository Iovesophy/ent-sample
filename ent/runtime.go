// Code generated by entc, DO NOT EDIT.

package ent

import (
	"ent-sample/ent/schema"
	"ent-sample/ent/staff"
	"ent-sample/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	staffFields := schema.Staff{}.Fields()
	_ = staffFields
	// staffDescEmail is the schema descriptor for email field.
	staffDescEmail := staffFields[0].Descriptor()
	// staff.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	staff.EmailValidator = staffDescEmail.Validators[0].(func(string) error)
	// staffDescRole is the schema descriptor for role field.
	staffDescRole := staffFields[1].Descriptor()
	// staff.RoleValidator is a validator for the "role" field. It is called by the builders before save.
	staff.RoleValidator = staffDescRole.Validators[0].(func(int32) error)
	// staffDescLastName is the schema descriptor for lastName field.
	staffDescLastName := staffFields[2].Descriptor()
	// staff.LastNameValidator is a validator for the "lastName" field. It is called by the builders before save.
	staff.LastNameValidator = staffDescLastName.Validators[0].(func(string) error)
	// staffDescFirstName is the schema descriptor for firstName field.
	staffDescFirstName := staffFields[3].Descriptor()
	// staff.FirstNameValidator is a validator for the "firstName" field. It is called by the builders before save.
	staff.FirstNameValidator = staffDescFirstName.Validators[0].(func(string) error)
	// staffDescGender is the schema descriptor for gender field.
	staffDescGender := staffFields[4].Descriptor()
	// staff.GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	staff.GenderValidator = staffDescGender.Validators[0].(func(int32) error)
	// staffDescPhoneNumber is the schema descriptor for phoneNumber field.
	staffDescPhoneNumber := staffFields[5].Descriptor()
	// staff.PhoneNumberValidator is a validator for the "phoneNumber" field. It is called by the builders before save.
	staff.PhoneNumberValidator = staffDescPhoneNumber.Validators[0].(func(string) error)
	// staffDescDescription is the schema descriptor for description field.
	staffDescDescription := staffFields[6].Descriptor()
	// staff.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	staff.DescriptionValidator = staffDescDescription.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUserType is the schema descriptor for userType field.
	userDescUserType := userFields[0].Descriptor()
	// user.UserTypeValidator is a validator for the "userType" field. It is called by the builders before save.
	user.UserTypeValidator = userDescUserType.Validators[0].(func(int32) error)
	// userDescPasswordHash is the schema descriptor for passwordHash field.
	userDescPasswordHash := userFields[1].Descriptor()
	// user.PasswordHashValidator is a validator for the "passwordHash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
}
